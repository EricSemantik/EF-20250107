// <auto-generated />
using System;
using HopitalEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HopitalEF.Migrations
{
    [DbContext(typeof(HopitalEFContext))]
    [Migration("20250109133738_ConsultationMedecin")]
    partial class ConsultationMedecin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HopitalEF.Model.Consultation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompteRendu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtConsultation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tarif")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MedecinId");

                    b.ToTable("consultation", (string)null);
                });

            modelBuilder.Entity("HopitalEF.Model.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Civilite")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("personne", (string)null);

                    b.HasDiscriminator<string>("type").HasValue("Personne");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HopitalEF.Model.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Dispo")
                        .HasColumnType("bit");

                    b.Property<int?>("MedecinId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedecinId")
                        .IsUnique()
                        .HasFilter("[MedecinId] IS NOT NULL");

                    b.ToTable("salle", (string)null);
                });

            modelBuilder.Entity("HopitalEF.Model.Employe", b =>
                {
                    b.HasBaseType("HopitalEF.Model.Personne");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Pause")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Employe");
                });

            modelBuilder.Entity("HopitalEF.Model.Patient", b =>
                {
                    b.HasBaseType("HopitalEF.Model.Personne");

                    b.Property<string>("MedecinTraitant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSS")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("patient");
                });

            modelBuilder.Entity("HopitalEF.Model.Medecin", b =>
                {
                    b.HasBaseType("HopitalEF.Model.Employe");

                    b.HasDiscriminator().HasValue("medecin");
                });

            modelBuilder.Entity("HopitalEF.Model.Secretaire", b =>
                {
                    b.HasBaseType("HopitalEF.Model.Employe");

                    b.HasDiscriminator().HasValue("secretaire");
                });

            modelBuilder.Entity("HopitalEF.Model.Consultation", b =>
                {
                    b.HasOne("HopitalEF.Model.Medecin", "Medecin")
                        .WithMany("Consultations")
                        .HasForeignKey("MedecinId");

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("HopitalEF.Model.Salle", b =>
                {
                    b.HasOne("HopitalEF.Model.Medecin", "Medecin")
                        .WithOne("Salle")
                        .HasForeignKey("HopitalEF.Model.Salle", "MedecinId");

                    b.Navigation("Medecin");
                });

            modelBuilder.Entity("HopitalEF.Model.Medecin", b =>
                {
                    b.Navigation("Consultations");

                    b.Navigation("Salle");
                });
#pragma warning restore 612, 618
        }
    }
}
